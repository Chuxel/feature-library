#!/bin/bash
set -e
if [ "$(id -u)" -ne 0 ]; then
    echo -e 'Script must be run as root.'
    exit 1
fi

SCRIPT_NAME="$(basename "${BASH_SOURCE[0]}")"
FEATURE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
FEATURE_ID="$(basename "${FEATURE_PATH}")"
BP_CONTAINER_BUILD_MODE="${BP_CONTAINER_BUILD_MODE:-devcontainer}"

# Import common utils
. "${FEATURE_PATH}/../../common/utils.sh"

set_var_to_option_value "${FEATURE_ID}" buildmode build_mode "devcontainer"
set_var_to_option_value "${FEATURE_ID}" targetpath target_path "/usr/local"
set_var_to_option_value "${FEATURE_ID}" nodeGypDependencies node_gyp "true"
set_var_to_option_value "${FEATURE_ID}" installtools install_tools "true"

nvm_path="${target_path}/nvm"
nvm_snippet='export NVM_DIR="REPLACE-ME"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"'

if [ "${build_mode}" = "devcontainer" ]; then
    # If enabled, verify "python3", "make", "gcc", "g++" commands are available so node-gyp works - https://github.com/nodejs/node-gyp
    if [ "${node_gyp}" = "true" ]; then
        check_command make make
        check_command gcc gcc
        check_command g++ g++
        check_command python3 python3-minimal
    fi
    # If nvm was installed, add ensure its sourced
    if [ "${install_tools}" = "true" ] && [ -e "${nvm_path}" ]; then
        if  ! grep -q "/nvm.sh" "$HOME/.bashrc" > /dev/null 2>&1 && ! grep -q "/nvm.sh" "/etc/bash.bashrc" > /dev/null 2>&1; then
            echo "${nvm_snippet//REPLACE-ME/${nvm_path}}" >> "/etc/bash.bashrc"
        fi
        if  ! grep -q "/nvm.sh" "$HOME/.zshrc" > /dev/null 2>&1 && ! grep -q "/nvm.sh" "/etc/zsh/zshrc" > /dev/null 2>&1; then
            echo "${nvm_snippet//REPLACE-ME/${nvm_path}}" >> "/etc/zsh/zshrc"
        fi
    fi
fi